package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"

	"github.com/hotbrainy/go-betting/backend/graph/model"
	"github.com/hotbrainy/go-betting/backend/internal/loaders"
	"github.com/hotbrainy/go-betting/backend/internal/models"
)

// CreateInbox is the resolver for the createInbox field.
func (r *mutationResolver) CreateInbox(ctx context.Context, input model.NewInboxInput) (*models.Inbox, error) {
	ldr := loaders.For(ctx)
	return ldr.InboxReader.CreateInbox(ctx, input)
}

// UpdateInbox is the resolver for the updateInbox field.
func (r *mutationResolver) UpdateInbox(ctx context.Context, id uint, input model.UpdateInboxInput) (*models.Inbox, error) {
	ldr := loaders.For(ctx)
	return ldr.InboxReader.UpdateInbox(ctx, id, input)
}

// DeleteInbox is the resolver for the deleteInbox field.
func (r *mutationResolver) DeleteInbox(ctx context.Context, id uint) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteInbox - deleteInbox"))
}

// GetInboxes is the resolver for the getInboxes field.
func (r *queryResolver) GetInboxes(ctx context.Context, filters []*model.Filter, orders []*model.Order, pagination *model.Pagination) (*model.InboxList, error) {
	ldr := loaders.For(ctx)
	return ldr.InboxReader.GetInboxs(ctx, filters, orders, pagination)
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *inboxResolver) DeletedAt(ctx context.Context, obj *models.Inbox) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: DeletedAt - deletedAt"))
}
func (r *Resolver) Inbox() generated.InboxResolver { return &inboxResolver{r} }
type inboxResolver struct{ *Resolver }
*/
