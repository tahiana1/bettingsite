package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"

	"github.com/hotbrainy/go-betting/backend/graph/model"
	"github.com/hotbrainy/go-betting/backend/internal/loaders"
	"github.com/hotbrainy/go-betting/backend/internal/models"
)

// CreateAdminPermission is the resolver for the createAdminPermission field.
func (r *mutationResolver) CreateAdminPermission(ctx context.Context, input model.NewAdminPermission) (*models.AdminPermission, error) {
	panic(fmt.Errorf("not implemented: CreateAdminPermission - createAdminPermission"))
}

// UpdateAdminPermission is the resolver for the updateAdminPermission field.
func (r *mutationResolver) UpdateAdminPermission(ctx context.Context, id uint, input model.UpdateAdminPermissionInput) (*models.AdminPermission, error) {
	ldr := loaders.For(ctx)
	return ldr.AdminPermissionReader.UpdateAdminPermission(ctx, id, input)
}

// AdminPermissions is the resolver for the adminPermissions field.
func (r *queryResolver) AdminPermissions(ctx context.Context, filters []*model.Filter, orders []*model.Order, pagination *model.Pagination) (*model.AdminPermissionList, error) {
	ldr := loaders.For(ctx)
	return ldr.AdminPermissionReader.GetAdminPermissions(ctx, filters, orders, pagination)
}
