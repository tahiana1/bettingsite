package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"

	"github.com/hotbrainy/go-betting/backend/graph/model"
	"github.com/hotbrainy/go-betting/backend/internal/loaders"
	"github.com/hotbrainy/go-betting/backend/internal/models"
)

// CreateMenu is the resolver for the createMenu field.
func (r *mutationResolver) CreateMenu(ctx context.Context, input model.NewMenuInput) (*models.Menu, error) {
	panic(fmt.Errorf("not implemented: CreateMenu - createMenu"))
}

// UpdateMenu is the resolver for the updateMenu field.
func (r *mutationResolver) UpdateMenu(ctx context.Context, id uint, input model.UpdateMenuInput) (*models.Menu, error) {
	panic(fmt.Errorf("not implemented: UpdateMenu - updateMenu"))
}

// DeleteMenu is the resolver for the deleteMenu field.
func (r *mutationResolver) DeleteMenu(ctx context.Context, id uint) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteMenu - deleteMenu"))
}

// GetUserMenus is the resolver for the getUserMenus field.
func (r *queryResolver) GetUserMenus(ctx context.Context) ([]*models.Menu, error) {
	ldr := loaders.For(ctx)
	return ldr.MenuReader.GetUserMenus((ctx))
}

// GetMenus is the resolver for the getMenus field.
func (r *queryResolver) GetMenus(ctx context.Context, filters []*model.Filter, orders []*model.Order, pagination *model.Pagination) (*model.MenuList, error) {
	ldr := loaders.For(ctx)
	return ldr.MenuReader.GetMenus(ctx, filters, orders, pagination)
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *menuResolver) DeletedAt(ctx context.Context, obj *models.Menu) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: DeletedAt - deletedAt"))
}
func (r *Resolver) Menu() generated.MenuResolver { return &menuResolver{r} }
type menuResolver struct{ *Resolver }
*/
