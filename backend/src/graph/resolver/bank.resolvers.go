package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"

	"github.com/hotbrainy/go-betting/backend/graph/model"
	"github.com/hotbrainy/go-betting/backend/internal/loaders"
	"github.com/hotbrainy/go-betting/backend/internal/models"
)

// CreateBank is the resolver for the createBank field.
func (r *mutationResolver) CreateBank(ctx context.Context, input model.NewBankInput) (*models.Bank, error) {
	ldr := loaders.For(ctx)
	return ldr.BankReader.CreateBank(ctx, input)
}

// UpdateBank is the resolver for the updateBank field.
func (r *mutationResolver) UpdateBank(ctx context.Context, id uint, input model.UpdateBankInput) (*models.Bank, error) {
	ldr := loaders.For(ctx)
	return ldr.BankReader.UpdateBank(ctx, id, input)
}

// DeleteBank is the resolver for the deleteBank field.
func (r *mutationResolver) DeleteBank(ctx context.Context, id uint) (bool, error) {
	ldr := loaders.For(ctx)
	return ldr.BankReader.DeleteBank(ctx, id)
}

// GetBanks is the resolver for the getBanks field.
func (r *queryResolver) GetBanks(ctx context.Context, filters []*model.Filter, orders []*model.Order, pagination *model.Pagination) (*model.BankList, error) {
	ldr := loaders.For(ctx)
	return ldr.BankReader.GetBanks(ctx, filters, orders, pagination)
}
